<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABDRJREFUaEPt
        mYFV3DAMhhmBERiBDWCDskG7AWxQNoANygZlA9iAbgAb0A2u/+fov+cLl4udOLn2lf89vZwdWZJtSZZz
        J5/4H7DZbM5EP0XgRXQVr/4dyGgm8c4MergLlr8fMpZJsAPgl+hUdJNaHdilC9H3+P0qAk+i0xCzHqT0
        XHQXBphsFEiTCHbz/+bFAdwG+zqQQowaAsY+iD6sLn2i23jP8yqexrdgXQdSuKNcdBl0FiwJajPhnb4c
        eod7GSzAuq4lhcSBQTzsGKA273E144codzN2xhnNuInX60KK2QmDyZxHP7vgjMUqOy7SZETsnJOB8ZyE
        HgsyIJ9MH88iDB8K8rd4gssQeTzIiPvOli0weif7qI2rPfJSYALEmFPyW7AdHxjT2VSedcRL5gLrptxD
        kDF2sZfoGoV4cT2wdSv9xg2JJRIFcQbx+1q0fEZDicgYTLc5xOeE4NSdZ7khLF+vSYlXuEiZ+JwA+hNg
        gl9FaQf05NC0Gy6foqXEEynyefH1U/A+4GZFOzwbUoRb4cN2Feot2ulcyaE+ikXqs7wmM1gIshnkRQHI
        Xa50kXAmQInhCdSCohKXyc8Y3CwFv555ygbt40NCCc58VTEoKeIZ7XxVAQbTx7mz3S39ZkHIevkBya45
        RnzetJ2IBOanOYZ9cKGpkCzcyjvEQjWTvQMJJviMRQ4yycWlcDuA27adjAR6i1mxRe8Nko+7OeWCNvoQ
        1MlLWO3yI12ezPydkQC22plptUkY0plPZvqZosE+uO6jqxgawyLk5wZPLlRVZbv4HTNP0VUHDfSVltRY
        VbSJP79gMZ4Ml58ZxclCvCyIx9aVKRpAwNmQ2hUcdEfaoikL4zhFbvlYMXs3qq+hGuMTee+qq79qEobG
        +dAsT/1itl9P2Q2AK0wyeAiSR9UAXqPrMMSIf4Pqa6jG+Lx5jK6mkFzHyng6FpPd6iG6iiB+x8UhVGe/
        HBrvdDzuXmJywVdcqIkXl2IB7MfECe0+zbpfaLzdazx2Yep4q+ODe4hji/OCMj+n2QeqZFB5g/HvA8G4
        iWYRxO4gP4QmV9WQNW5f8FVNxNAw3AcsEuwg5BdNJPl5NKugYfbh9+hqCsnloAbjGVVMk2LE0DinyOZF
        pmQ6RoqC3SfzpOulxtm99t7y1HcdP6uhsd7xcdcVk+uaqnMkh8Z6MThbuFk6c6WsFmzV0FCfI+O7LSb7
        IUonlxkay87kFS+gPelQ1Li8kC2zS4xe0VknMZAMSh58e9YtD1tEoNxTxMzsFwvaWmBDZ0qyqc5LNMCB
        BdI/TvFqNaAzdBvTvm9pIC7hnXHgXsTrxYCO0OWYwIZJx8EWEkD5kX+eMfjEyZ2cbPRFhPLiSZo/xiLD
        /9v3ge52H7MRJiLg/DFgSaADXct+jZcCfBe3c3lONQDVTBJej7McZK4ei59oj5OTP2pQc5pIvjhCAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>